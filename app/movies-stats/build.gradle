ext {
    awsLambdaJavaCoreVersion = "1.2.0"
    awsLambdaJavaEventsVersion = "2.2.7"
    awsJavaSdkVersion = "1.11.717"
    awsXrayJavaSdkVersion = "2.4.0"
    gradleVersion = "6.1.1"
    jacksonVersion = "2.10.2"
}

subprojects {
    apply plugin: "java"
    apply plugin: "idea"

    group = "de.mbe.tutorials.aws.serverless.moviesstats"
    version = "1.0.0"

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}

configure(subprojects.findAll {it.name != "models"}) {
    dependencies {
        implementation project(":models")

        implementation "com.amazonaws:aws-lambda-java-core:${awsLambdaJavaCoreVersion}"
        implementation "com.amazonaws:aws-lambda-java-events:${awsLambdaJavaEventsVersion}"

        implementation platform("com.amazonaws:aws-xray-recorder-sdk-bom:${awsXrayJavaSdkVersion}")
        implementation "com.amazonaws:aws-xray-recorder-sdk-core:${awsXrayJavaSdkVersion}"
        implementation "com.amazonaws:aws-xray-recorder-sdk-aws-sdk-instrumentor:${awsXrayJavaSdkVersion}"

        implementation platform("com.amazonaws:aws-java-sdk-bom:${awsJavaSdkVersion}")
        implementation "com.amazonaws:aws-java-sdk-dynamodb:${awsJavaSdkVersion}"
    }

    task buildLayerZip(type: Zip) {
        into("java/lib") {
            from configurations.runtimeClasspath
        }
        archiveFileName = "${project.name}-layer.zip"
    }

    task buildZip(type: Zip) {
        from compileJava
        archiveFileName = "${project.name}.zip"
    }

    build.dependsOn buildLayerZip
    build.dependsOn buildZip
}

wrapper {
    gradleVersion = "${gradleVersion}"
    distributionType = Wrapper.DistributionType.ALL
}